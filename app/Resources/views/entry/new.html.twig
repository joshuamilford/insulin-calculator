{% extends 'base.html.twig' %}

{% block body %}
<div class="row">
    <div class="col-sm-6 col-sm-offset-3">

    {% if entry.ratio %}

        <div class="jumbotron text-center">
            <h1>{{ entry.calculatedUnits|number_format(2) }}</h1>
        </div>

        <div class="alert alert-success">
            <p>The recommended number of units is {{ entry.calculatedUnits|number_format(2) }}. Here's the math:</p>
            <ul>
                <li>Using the {{ entry.name }} ratio, you should get 1 unit for every {{ entry.ratio }} carbs</li>
                <li>{{ entry.carbs }} carbs / {{ entry.ratio }} = {{ (entry.carbs / entry.ratio)|number_format(2) }} units</li>
                {% if entry.correctionUnits %}
                    <li>Additionally, since your blood glucose level was at least {{ entry.correctionThreshold}}, you get an additional {{ entry.correctionUnits }} units.</li>
                {% endif %}
            </ul>
        </div>

    {% endif %}

        {% macro entryFoodsCollectionItem(formData) %}
                {{ form_row(formData.food) }}
                {{ form_row(formData.newFood) }}
                <div class="form-row">
                    <div class="form-column">
                        {{ form_row(formData.carbs) }}
                    </div>
                    <div class="form-column">
                        {{ form_row(formData.servings) }}
                    </div>
                </div>
        {% endmacro %}


    {{ form_start(form) }}

        {{ form_errors(form) }}

        <label>Foods</label>
        <ul class="entryFoods list-unstyled" data-prototype="{{ _self.entryFoodsCollectionItem(form.entryFoods.vars.prototype)|e('html_attr') }}">
            {% for food in form.entryFoods %}
                <li class="well food-item">
                {{ _self.entryFoodsCollectionItem(food) }}
                </li>
            {% endfor %}
            {% do form.entryFoods.setRendered %}
        </ul>

        <div class="form-row">
            <div class="form-column">
                {{ form_row(form.bgl) }}
            </div>
            <div class="form-column">
                {{ form_row(form.ratio) }}
            </div>
        </div>


        <div class="form-row">
            <div class="form-column">
                <div class="form-group">
                    {{ form_label(form.actualUnits) }}
                    {{ form_errors(form.actualUnits) }}
                    {{ form_widget(form.actualUnits, { 'value': entry.actualUnits ? entry.actualUnits : entry.calculatedUnits|number_format(2) }) }}
                </div>
            </div>
            <div class="form-column">
                <div class="form-group">
                    {{ form_widget(form.calculate) }}
                </div>
            </div>
        </div>

    {{ form_row(form.tags) }}

    {{ form_row(form.notes) }}

        <div class="form-row">
            <div class="form-column">
                {{ form_row(form.createdAt.date) }}
            </div>
            <div class="form-column">
                {{ form_row(form.createdAt.time) }}
            </div>
        </div>

    <div class="form-group">
        {{ form_widget(form.save, {'attr': {'class': 'btn-primary'}}) }}
    </div>

    {{ form_end(form) }}



    </div>
</div>

{% endblock %}

{% block javascripts %}

    <script>
        var $collectionHolder;

        // setup an "add a tag" link
        var $addTagLink = $('<a href="#" class="add_entryFood_link btn btn-default">Add a Food</a>');
        var $newLinkLi = $('<li class="food-item"></li>').append($addTagLink);

        var $foodList = {{ foodList|raw }};


        jQuery(document).ready(function() {

            $('.newFood').each(function(){
                $container = $(this).closest('.form-group');
                if($container.find('input').val()) {
                    $container.prev('.form-group').hide();
                } else {
                    $container.hide();
                }
            });

            // Get the ul that holds the collection of tags
            $collectionHolder = $('ul.entryFoods');

            $collectionHolder.find('.food-item').each(function() {
                addTagFormDeleteLink($(this));
                addNewOption($(this));
            });

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addTagLink.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new tag form (see next code block)
                addTagForm($collectionHolder, $newLinkLi);
            });
        });

        $('.entryFoods').on('change', '.currentFoods', function(){
            if ($(this).val() == 'new') {
                $(this).val('');
                $current = $(this).closest('.form-group');
                $new = $current.next('.form-group');
                $current.hide();
                $new.show();
            } else {
                for(var i = 0; i < $foodList.length; i++){
                    if($foodList[i].id == $(this).val()){
                        $carbs = $foodList[i].carbs;
                    }
                }
                $(this).closest('li').find('.foodCarbs').val($carbs);
            }
        });

        function addTagForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li class="well"></li>').append(newForm);
            $newLinkLi.before($newFormLi);

            addTagFormDeleteLink($newFormLi);
            addNewOption($newFormLi);
            $newFormLi.find('.newFood').closest('.form-group').hide();
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormA = $('<a href="#" class="btn btn-danger">Remove</a>');
            $tagFormLi.append($removeFormA);

            $removeFormA.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }

        function addNewOption($tagFormLi) {
            var $newOption = $('<option value="new">Add New</option>');
            $tagFormLi.find('select').append($newOption);
        }

    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js"></script>
    <script>
        $('.select2').select2({
            tags: true
        });
    </script>

{% endblock %}